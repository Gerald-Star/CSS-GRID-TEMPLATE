body {
  margin: 80px;
  padding: 0;
  box-sizing: border-box;
  background-color: beige;
}

.text-header {
  font-size: 30px;
  font-family: normal;
  font-weight: bold;
  color: black;
  text-align: center;
  margin-top: 20px;
}

/* Grid container */

.wrapper1 {
  display: grid;
  grid-template-columns: 150px 100px 100px;
  grid-gap: 10px;
  background-color: #fff;
  color: #444;
  margin-top: 20px;
  margin-bottom: 20px;
}

.box1 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
}

/* You achieve the same result using grid area 

  .a {
    grid-area: 1 / 2 / 2 / 3;
  }
  .b {
    grid-area: 2 / 2 / 3 / 3;
  }
  .c {
    grid-area: 2 / 3 / 3 / 4;
  }
  .d {
    grid-area: 1 / 1 / 2 / 2;
  }
  .e {
    grid-area: 2 / 1 / 3 / 2;
  }
  .f {
    grid-area: 1 / 3 / 2 / 4;
  }
  */

/* Grid container */

.wrapper2 {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: 100px 100px 100px;
  background-color: #fff;
  color: #444;
}

.box2 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
}

.a {
  grid-column: 1 / 3;
  grid-row: 1;
}
.b {
  grid-column: 3;
  grid-row: 1 / 3;
}
.c {
  grid-column: 1;
  grid-row: 2;
}
.d {
  grid-column: 2;
  grid-row: 2;
}

/* 

  You can achieve the same result by using the span keyword
We can also span using the span keyword. This example creates the same 
layout as the one in example 5. I am using the span keyword rather than targeting 
the Grid Line by number. I am also using the defaults for row and column end, 
which 
is to span 1.


  .a {
    grid-column: 1 / span 2;
  }
  .b {
    grid-column: 3 ;
    grid-row: 1 / span 2;
  }
  .c {
    grid-column: 1 ;
    grid-row: 2 ;
  }
  .d {
    grid-column: 2 ;
    grid-row: 2 ;
  }
  
  
  
  */

/*  */

.wrapper3 {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: [col] 100px [col] 100px [col] 100px [col] 100px;
  grid-template-rows: [row] auto [row] auto [row];
  background-color: #fff;
  color: #444;
  margin-top: 25px;
}

.box3 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
}

.a3 {
  grid-column: col / span 2;
  grid-row: row;
}
.b3 {
  grid-column: col 3 / span 2;
  grid-row: row;
}
.c3 {
  grid-column: col;
  grid-row: row 2;
}
.d3 {
  grid-column: col 2 / span 3;
  grid-row: row 2;
}

.e3 {
  grid-column: col / span 4;
  grid-row: row 3;
}

/* Using repeat  */

.wrapper4 {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(4, [col] 100px);
  grid-template-rows: repeat(3, [row] auto);
  background-color: #fff;
  color: #444;
  margin-top: 25px;
}

.box4 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
}

.a4 {
  grid-column: col / span 2;
  grid-row: row;
}
.b4 {
  grid-column: col 3 / span 2;
  grid-row: row;
}
.c4 {
  grid-column: col;
  grid-row: row 2;
}
.d4 {
  grid-column: col 2 / span 3;
  grid-row: row 2;
}

.e4 {
  grid-column: col / span 4;
  grid-row: row 3;
}

/* Redefining Grid Area with Media Queries */

.sidebar5 {
  grid-area: sidebar;
}

.sidebar2 {
  grid-area: sidebar2;
}

.content5 {
  grid-area: content;
}

.header5 {
  grid-area: header;
}

.footer5 {
  grid-area: footer;
}

.wrapper5 {
  background-color: #fff;
  color: #444;
  margin-top: 25px;
}

.wrapper5 {
  display: grid;
  grid-gap: 1em;
  grid-template-areas:
    'header'
    'sidebar'
    'content'
    'sidebar2'
    'footer';
}

@media only screen and (min-width: 500px) {
  .wrapper5 {
    grid-template-columns: 20% auto;
    grid-template-areas:
      'header   header'
      'sidebar  content'
      'sidebar2 sidebar2'
      'footer   footer';
  }
}

@media only screen and (min-width: 600px) {
  .wrapper5 {
    grid-gap: 20px;
    grid-template-columns: 120px auto 120px;
    grid-template-areas:
      'header  header  header'
      'sidebar content sidebar2'
      'footer  footer  footer';
    max-width: 600px;
  }
}

.box5 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 10px;
  font-size: 150%;
}

.header5,
.footer5 {
  background-color: #999;
}

.sidebar2 {
  background-color: #ccc;
  color: #444;
}

/* Grid advert */

.box6 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  margin: 20px 0 20px 0;
  font-size: 150%;
}

.wrapper6 {
  width: 400px;
  display: grid;
  grid-template-columns: auto;
  grid-template-rows: auto;
  background-color: #fff;
  color: #444;
  margin-top: 25px;
}

.section1 {
  grid-row: 1 / 2;
}

.section2 {
  grid-row: 3 / 4;
}

.section3 {
  grid-row: 5 / 6;
}

.ad1 {
  grid-row: 2 / 3;
}

.ad2 {
  grid-row: 4 / 5;
}

/* grid auto flow colum */

.box7 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
}

.box7:nth-child(even) {
  background-color: #ccc;
  color: #000;
}

.wrapper7 {
  width: 600px;
  margin-top: 25px;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(6, 100px);
  grid-template-rows: 100px 100px 100px;
  grid-auto-flow: column;
}

/* nested grid */

.wrapper8 {
  display: grid;
  margin-top: 25px;
  grid-gap: 10px;
  grid-template-columns: repeat(4, [col] 150px);
  grid-template-rows: repeat(2, [row] auto);
  background-color: #fff;
  color: #444;
}

.box8 {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
}

.box8 .box8 {
  background-color: #ccc;
  color: #444;
}

.a8 {
  grid-column: col / span 2;
  grid-row: row;
}

.b8 {
  grid-column: col 3 / span 2;
  grid-row: row;
}

.c8 {
  grid-column: col / span 2;
  grid-row: row 2;
}

.d8 {
  grid-column: col 3 / span 2;
  grid-row: row 2;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: 1fr 1fr;
}

.e8 {
  grid-column: 1 / 3;
  grid-row: 1;
}

.f8 {
  grid-column: 1;
  grid-row: 2;
}

.g8 {
  grid-column: 2;
  grid-row: 2;
}

/* Box align - align-items */

.wrapper9 {
  display: grid;
  margin: 25px;
  align-items: center;
  background: no-repeat
    url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/12005/grid.png);
  grid-gap: 10px;
  grid-template-columns: repeat(6, 150px);
  grid-template-rows: repeat(4, 150px);
  background-color: #fff;
  color: #444;
}

.box9 {
  border: 1px solid #444;
  padding: 20px;
  font-size: 150%;
}

.a9 {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
}

.b9 {
  grid-column: 3 / 5;
  grid-row: 1 / 3;
}

.c9 {
  grid-column: 1 / 3;
  grid-row: 3 / 6;
}

.d9 {
  grid-column: 3 / 5;
  grid-row: 3 / 6;
}

.e9 {
  grid-column: 5 / 7;
  grid-row: 1 / 6;
  align-self: stretch;
}

/* Responsive Semantic Grid */

h1,
p {
  margin: 0 0 1em 0;
}

.wrapper10 {
  max-width: 940px;
  margin: 0 20px;
  display: grid;
  grid-gap: 10px;
}

@media screen and (min-width: 500px) {
  /* no grid support? */
  .sidebar10 {
    float: left;
    width: 19.1489%;
  }

  .content10 {
    float: right;
    width: 79.7872%;
  }

  .wrapper10 {
    margin: 0 auto;
    grid-template-columns: 1fr 3fr;
  }

  .header10,
  .footer10 {
    grid-column: 1 / -1;
    /* needed for the floated layout */
    clear: both;
  }
}

.wrapper10 > * {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
  /* needed for the floated layout*/
  margin-bottom: 10px;
}

/* We need to set the widths used on floated items back to auto, and remove the bottom margin as when we have grid we have gaps. */
@supports (display: grid) {
  .wrapper10 > * {
    width: auto;
    margin: 0;
  }
}
